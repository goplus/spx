var (
	movnum int
)
onClick => {
	animate "clap"
}

onKey KeySpace, => {
	println width, height
	animate "think"
}

onKey KeyH, => {
	if visible {
		say "Hi"
		hide
	} else {
		show
	}
}

onKey KeyUp, => {
	prevCostume
	say costumeIndex
}

onKey KeyDown, => {
	nextCostume
	say costumeIndex
}

onKey [KeyEnter, KeyS], => {
	movnum = 0
	step 5
	step -5
}

onKey KeyLeft, => {
	movnum = 0
	step 1
}
onKey KeyZ, => {
	movnum = 0
	step 5
}

onKey KeyA, => {
	turnTo 90
	say heading, 1
}

onKey KeyB, => {
	turn 45
	say heading, 1
}

onMoving mi => {
	movnum++
	if movnum > 15 {
		stopMoving
	}
	//Crocodile.ChangeXYpos mi.dx, mi.dy
}

onTurning ti=> {
	Crocodile.SetHeading ti.newDir
}
